{"ast":null,"code":"var _jsxFileName = \"/Users/maria/Desktop/finalproject/client/src/pages/AddMed/AddMed.js\";\nimport React, { useState } from 'react';\nimport { Col, Row, Container } from '../../components/Grid';\nimport { Input, FormBtn } from '../../components/Form';\nimport HomeButton from '../../components/HomeButton';\nimport BackBtn from '../../components/BackBtn';\nimport API from '../../utils/API';\n\nfunction AddMedForm() {\n  const [medName, setMedName] = useState('');\n  const [dosage, setDosage] = useState('');\n  const [timeToTake, setTime] = useState('');\n  const [purpose, setPurpose] = useState('');\n  const [prescribingDoc, setDoctor] = useState('');\n  let passed = true;\n\n  const onSubmitHandler = e => {\n    // Prevent browser refreshing after form submission\n    e.preventDefault();\n    console.log(e.target); // Call fetch books async function\n\n    saveMeds();\n  };\n\n  const onInputChange = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n\n    if (name === 'medname') {\n      setMedName(value);\n    } else if (name === 'dosage') {\n      setDosage(value);\n    } else if (name === 'timetotake') {\n      setTime(value);\n    } else if (name === 'purpose') {\n      setPurpose(value);\n    } else if (name === 'prescribingdoc') {\n      setDoctor(value);\n    }\n  };\n\n  function saveMeds() {\n    if (!medName) {\n      passed = false;\n      alert(\"Please enter Medication Name\");\n    } else if (!dosage) {\n      passed = false;\n      alert(\"Please enter Dosage\");\n    } else if (!timeToTake) {\n      passed = false;\n      alert(\"Please enter a time to take\");\n    }\n\n    if (passed) {\n      API.saveMeds({\n        medname: medName,\n        dosage: dosage,\n        timetotake: timeToTake,\n        purpose: purpose,\n        prescribingdoc: prescribingDoc\n      }).then(results => {\n        //console.log(results);\n        setMedName('');\n        setDosage('');\n        setTime('');\n        setPurpose('');\n        setDoctor('');\n        passed = true;\n      }) // .then(res => loadBooks())\n      .catch(err => console.log(err));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '20%',\n      clear: 'both',\n      paddingTop: 20,\n      paddingBottom: 20,\n      textAlign: 'center'\n    },\n    id: \"m1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"Add Medication\")), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Medication Name\"), /*#__PURE__*/React.createElement(Input, {\n    value: medName,\n    name: \"medname\",\n    onChange: onInputChange,\n    type: \"text\",\n    placeholder: \"Medication Name (required)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 16\n    }\n  }, \"Enter Dosage\"), /*#__PURE__*/React.createElement(Input, {\n    value: dosage,\n    name: \"dosage\",\n    onChange: onInputChange,\n    type: \"text\",\n    placeholder: \"Add Dosage (required)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, \"Enter Time To Take \"), /*#__PURE__*/React.createElement(Input, {\n    value: timeToTake,\n    name: \"timetotake\",\n    onChange: onInputChange,\n    type: \"text\",\n    placeholder: \"AM/PM (required)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, \"Reason For Taking Medication\"), /*#__PURE__*/React.createElement(Input, {\n    value: purpose,\n    name: \"purpose\",\n    onChange: onInputChange,\n    type: \"text\",\n    placeholder: \"Medication Purpose (required)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 16\n    }\n  }, \"Prescribing Doctor\"), /*#__PURE__*/React.createElement(Input, {\n    value: prescribingDoc,\n    name: \"prescribingdoc\",\n    onChange: onInputChange,\n    type: \"text\",\n    placeholder: \"Prescribing Doctor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormBtn, {\n    className: \"btn-med\",\n    onClick: onSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, \"Submit Medication Info\"))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BackBtn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(HomeButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }))));\n}\n\nexport default AddMedForm;","map":{"version":3,"sources":["/Users/maria/Desktop/finalproject/client/src/pages/AddMed/AddMed.js"],"names":["React","useState","Col","Row","Container","Input","FormBtn","HomeButton","BackBtn","API","AddMedForm","medName","setMedName","dosage","setDosage","timeToTake","setTime","purpose","setPurpose","prescribingDoc","setDoctor","passed","onSubmitHandler","e","preventDefault","console","log","target","saveMeds","onInputChange","event","value","name","alert","medname","timetotake","prescribingdoc","then","results","catch","err","height","clear","paddingTop","paddingBottom","textAlign"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Col, Row, Container } from '../../components/Grid';\nimport { Input, FormBtn } from '../../components/Form';\nimport HomeButton from '../../components/HomeButton';\nimport BackBtn from '../../components/BackBtn';\nimport API from '../../utils/API';\n\nfunction AddMedForm() {\n  const [medName, setMedName] = useState('');\n  const [dosage, setDosage] = useState('');\n  const [timeToTake, setTime] = useState('');\n  const [purpose, setPurpose] = useState('');\n  const [prescribingDoc, setDoctor] = useState('');\n  let passed = true;\n\n  const onSubmitHandler = (e) => {\n    // Prevent browser refreshing after form submission\n    e.preventDefault();\n    console.log(e.target);\n    // Call fetch books async function\n    saveMeds();\n  }\n\n  const onInputChange = (event) => {\n    const value = event.target.value;\n    const name = event.target.name;\n\n    if (name === 'medname') { \n      setMedName(value)\n    } else if (name === 'dosage') {\n      setDosage(value);\n    } else if (name === 'timetotake') {\n      setTime(value);\n    } else if (name === 'purpose') {\n      setPurpose(value);\n    } else if (name === 'prescribingdoc') {\n      setDoctor(value);\n    }\n  }\n\n  function saveMeds() {\n    if (!medName) {\n      passed = false;\n      alert(\"Please enter Medication Name\");\n    } else if (!dosage) {\n      passed = false;\n      alert(\"Please enter Dosage\");\n    } else if (!timeToTake) {\n      passed = false;\n      alert(\"Please enter a time to take\");\n    }\n\n    if (passed) {\n      API.saveMeds({\n        medname: medName,\n        dosage: dosage,\n        timetotake: timeToTake,\n        purpose: purpose, \n        prescribingdoc: prescribingDoc\n      })\n      .then(results => {\n        //console.log(results);\n        setMedName('');\n        setDosage('');\n        setTime('');\n        setPurpose('');\n        setDoctor('');\n        passed = true;\n      })\n      // .then(res => loadBooks())\n      .catch(err => console.log(err));\n    }\n  }\n\n  return (\n    <div>\n      <div\n        style={{\n          height: '20%', clear: 'both', paddingTop: 20, paddingBottom: 20, textAlign: 'center',\n        }}\n        id=\"m1\"\n      >\n        <p>Add Medication</p>\n      </div>\n      <Container fluid>\n        <Row>\n          <Col size='md-12'>\n            <form>\n            <label>Medication Name</label>\n              <Input\n                value={medName}\n                name='medname'\n                onChange={onInputChange}\n                type='text'\n                placeholder='Medication Name (required)'\n              />\n               <label>Enter Dosage</label>\n              <Input\n                value={dosage}\n                name='dosage'\n                onChange={onInputChange}\n                type='text'\n                placeholder='Add Dosage (required)'        \n              />\n              <label>Enter Time To Take </label>\n              <Input\n                value={timeToTake}\n                name='timetotake'\n                onChange={onInputChange}\n                type='text'\n                placeholder='AM/PM (required)'\n              />\n              <label>Reason For Taking Medication</label>\n              <Input\n                value={purpose}\n                name='purpose'\n                onChange={onInputChange}\n                type='text'\n                placeholder='Medication Purpose (required)'\n              />\n               <label>Prescribing Doctor</label>\n              <Input\n                value={prescribingDoc}\n                name='prescribingdoc'\n                onChange={onInputChange}\n                type='text'\n                placeholder='Prescribing Doctor'\n              />\n              <FormBtn className='btn-med' onClick={onSubmitHandler}>Submit Medication Info</FormBtn>\n            </form>\n          </Col>\n        </Row>\n      </Container>\n      <Row>\n        <Col size=\"md-12\">\n        <BackBtn />\n        <HomeButton />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default AddMedForm;"]},"metadata":{},"sourceType":"module"}