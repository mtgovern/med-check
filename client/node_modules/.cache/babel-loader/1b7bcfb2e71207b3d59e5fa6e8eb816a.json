{"ast":null,"code":"var _jsxFileName = \"/Users/maria/Desktop/finalproject/client/src/pages/AddDoc/AddDoc.js\";\nimport React, { useState } from 'react';\nimport { Input, FormBtn } from '../../components/Form';\nimport { Col, Row, Container } from '../../components/Grid';\nimport HomeButton from '../../components/HomeButton';\nimport RtnDocBtn from '../../components/RtnDocBtn';\nimport API from '../../utils/API';\n\nfunction validatePhoneNo(phone) {\n  var phoneNumPattern = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n  return phoneNumPattern.test(phone);\n}\n\nfunction validateZipCode(zip) {\n  var zipCodePattern = /^\\d{5}$|^\\d{5}-\\d{4}$/;\n  return zipCodePattern.test(zip);\n}\n\nfunction AddDoc() {\n  const [doctorname, setDoctor] = useState('');\n  const [specialty, setSpecialty] = useState('');\n  const [phonenumber, setPhone] = useState('');\n  const [addressone, setAddressOne] = useState('');\n  const [addresstwo, setAddressTwo] = useState('');\n  const [city, setCity] = useState('');\n  const [state, setState] = useState('');\n  const [zipcode, setZipCode] = useState('');\n  let passed = true;\n\n  const onSubmitHandler = e => {\n    // Prevent browser refreshing after form submission\n    e.preventDefault();\n    saveDocs();\n  };\n\n  const onInputChange = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n\n    switch (name) {\n      case 'doctorname':\n        {\n          setDoctor(value);\n          break;\n        }\n\n      case 'specialty':\n        {\n          setSpecialty(value);\n          break;\n        }\n\n      case 'phonenumber':\n        {\n          setPhone(value);\n          break;\n        }\n\n      case 'addressone':\n        {\n          setAddressOne(value);\n          break;\n        }\n\n      case 'addresstwo':\n        {\n          setAddressTwo(value);\n          break;\n        }\n\n      case 'city':\n        {\n          setCity(value);\n          break;\n        }\n\n      case 'state':\n        {\n          setState(value);\n          break;\n        }\n\n      case 'zipcode':\n        {\n          setZipCode(value);\n          break;\n        }\n\n      default:\n        {\n          break;\n        }\n    }\n  };\n\n  function saveDocs() {\n    passed = true;\n\n    if (!doctorname) {\n      passed = false;\n      alert(`Doctor's Name Required`);\n    } else if (!phonenumber) {\n      passed = false;\n      alert('Phone Number Required');\n    } else if (!addressone) {\n      passed = false;\n      alert('Address Line One Required');\n    } else if (!city) {\n      passed = false;\n      alert('City Required');\n    } else if (!state) {\n      passed = false;\n      alert('State Required');\n    } else if (!zipcode) {\n      passed = false;\n      alert('Zip Code Required');\n    }\n\n    if (validateZipCode(zipcode)) {\n      passed = true;\n    } else {\n      passed = false;\n      alert(\"Zip code is invalid\");\n    }\n\n    if (validatePhoneNo(phonenumber)) {\n      passed = true;\n    } else {\n      passed = false;\n      alert(\"Phone number is invalid\");\n    }\n\n    if (passed) {\n      API.saveDocs({\n        name: doctorname,\n        phone: phonenumber,\n        address: addressone,\n        address2: addresstwo,\n        city: city,\n        state: state,\n        zipcode: zipcode,\n        specialty: specialty\n      }).then(results => {\n        //console.log(results);\n        setDoctor('');\n        setSpecialty('');\n        setPhone('');\n        setAddressOne('');\n        setAddressTwo('');\n        setCity('');\n        setState('');\n        setZipCode('');\n      }) // .then(res => loadBooks())\n      .catch(err => console.log(err));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '20%',\n      clear: 'both',\n      paddingTop: 20,\n      paddingBottom: 20,\n      textAlign: 'center'\n    },\n    id: \"m2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, \"DOCTORS\")), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }, \"Doctor Name\"), /*#__PURE__*/React.createElement(Input, {\n    value: doctorname,\n    name: \"doctorname\",\n    onChange: onInputChange,\n    type: \"text\",\n    placeholder: \"Doctor Name (required)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, \"Specialty\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"specialty\",\n    placeholder: \"Specialty\",\n    value: specialty,\n    onChange: onInputChange,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"phonenumber\",\n    placeholder: \"Phone w/Area Code\",\n    value: phonenumber,\n    onChange: onInputChange,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, \"Address Line One\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"addressone\",\n    placeholder: \"Address Line One\",\n    value: addressone,\n    onChange: onInputChange,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  }, \"Address Line Two\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"addresstwo\",\n    placeholder: \"Address Line Two\",\n    value: addresstwo,\n    onChange: onInputChange,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"city\",\n    placeholder: \"City (Required)\",\n    value: city,\n    onChange: onInputChange,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  }, \"State\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"state\",\n    placeholder: \"State (Required)\",\n    value: state,\n    onChange: onInputChange,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 15\n    }\n  }, \"Zip Code\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"zipcode\",\n    placeholder: \"Zip Code (Required)\",\n    value: zipcode,\n    onChange: onInputChange,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormBtn, {\n    className: \"btn-doc\",\n    onClick: onSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 15\n    }\n  }, \"Submit Doctor Info\"))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RtnDocBtn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(HomeButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default AddDoc;","map":{"version":3,"sources":["/Users/maria/Desktop/finalproject/client/src/pages/AddDoc/AddDoc.js"],"names":["React","useState","Input","FormBtn","Col","Row","Container","HomeButton","RtnDocBtn","API","validatePhoneNo","phone","phoneNumPattern","test","validateZipCode","zip","zipCodePattern","AddDoc","doctorname","setDoctor","specialty","setSpecialty","phonenumber","setPhone","addressone","setAddressOne","addresstwo","setAddressTwo","city","setCity","state","setState","zipcode","setZipCode","passed","onSubmitHandler","e","preventDefault","saveDocs","onInputChange","event","value","target","name","alert","address","address2","then","results","catch","err","console","log","height","clear","paddingTop","paddingBottom","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,OAAhB,QAA+B,uBAA/B;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,uBAApC;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAiC;AAC/B,MAAIC,eAAe,GAAG,oDAAtB;AACE,SAAOA,eAAe,CAACC,IAAhB,CAAqBF,KAArB,CAAP;AACH;;AAED,SAASG,eAAT,CAAyBC,GAAzB,EAA8B;AAC5B,MAAIC,cAAc,GAAG,uBAArB;AACC,SAAOA,cAAc,CAACH,IAAf,CAAoBE,GAApB,CAAP;AACF;;AAED,SAASE,MAAT,GAAkB;AAChB,QAAM,CAACC,UAAD,EAAaC,SAAb,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACqB,WAAD,EAAcC,QAAd,IAA0BtB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACuB,UAAD,EAAaC,aAAb,IAA8BxB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACyB,UAAD,EAAaC,aAAb,IAA8B1B,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC2B,IAAD,EAAOC,OAAP,IAAkB5B,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAAC6B,KAAD,EAAQC,QAAR,IAAoB9B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC+B,OAAD,EAAUC,UAAV,IAAwBhC,QAAQ,CAAC,EAAD,CAAtC;AAEA,MAAIiC,MAAM,GAAG,IAAb;;AAEA,QAAMC,eAAe,GAAIC,CAAD,IAAO;AAC7B;AACAA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,QAAQ;AACT,GAJD;;AAMA,QAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,UAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AACA,UAAME,IAAI,GAAGH,KAAK,CAACE,MAAN,CAAaC,IAA1B;;AAEA,YAAQA,IAAR;AAEE,WAAK,YAAL;AACA;AACExB,UAAAA,SAAS,CAACsB,KAAD,CAAT;AACA;AACD;;AAED,WAAK,WAAL;AACE;AACEpB,UAAAA,YAAY,CAACoB,KAAD,CAAZ;AACA;AACD;;AAEH,WAAK,aAAL;AACE;AACElB,UAAAA,QAAQ,CAACkB,KAAD,CAAR;AACA;AACD;;AAEH,WAAK,YAAL;AACE;AACEhB,UAAAA,aAAa,CAACgB,KAAD,CAAb;AACA;AACD;;AAED,WAAK,YAAL;AACA;AACEd,UAAAA,aAAa,CAACc,KAAD,CAAb;AACA;AACD;;AAED,WAAK,MAAL;AACE;AACEZ,UAAAA,OAAO,CAACY,KAAD,CAAP;AACA;AACD;;AAEH,WAAK,OAAL;AACE;AACEV,UAAAA,QAAQ,CAACU,KAAD,CAAR;AACA;AACD;;AAEH,WAAK,SAAL;AACE;AACER,UAAAA,UAAU,CAACQ,KAAD,CAAV;AACA;AACD;;AAEH;AACA;AACE;AACD;AArDL;AAuDD,GA3DD;;AA6DA,WAASH,QAAT,GAAoB;AAClBJ,IAAAA,MAAM,GAAG,IAAT;;AACA,QAAI,CAAChB,UAAL,EAAiB;AACfgB,MAAAA,MAAM,GAAG,KAAT;AACAU,MAAAA,KAAK,CAAE,wBAAF,CAAL;AACD,KAHD,MAGO,IAAI,CAACtB,WAAL,EAAkB;AACvBY,MAAAA,MAAM,GAAG,KAAT;AACAU,MAAAA,KAAK,CAAC,uBAAD,CAAL;AACD,KAHM,MAGA,IAAI,CAACpB,UAAL,EAAiB;AACtBU,MAAAA,MAAM,GAAG,KAAT;AACAU,MAAAA,KAAK,CAAC,2BAAD,CAAL;AACD,KAHM,MAGA,IAAI,CAAChB,IAAL,EAAW;AAChBM,MAAAA,MAAM,GAAG,KAAT;AACAU,MAAAA,KAAK,CAAC,eAAD,CAAL;AACD,KAHM,MAGA,IAAI,CAACd,KAAL,EAAY;AACjBI,MAAAA,MAAM,GAAG,KAAT;AACAU,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACD,KAHM,MAGA,IAAI,CAACZ,OAAL,EAAc;AACnBE,MAAAA,MAAM,GAAG,KAAT;AACAU,MAAAA,KAAK,CAAC,mBAAD,CAAL;AACD;;AAED,QAAI9B,eAAe,CAACkB,OAAD,CAAnB,EAA8B;AAC5BE,MAAAA,MAAM,GAAG,IAAT;AACD,KAFD,MAEO;AACLA,MAAAA,MAAM,GAAG,KAAT;AACAU,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACD;;AAED,QAAIlC,eAAe,CAACY,WAAD,CAAnB,EAAkC;AAChCY,MAAAA,MAAM,GAAG,IAAT;AACD,KAFD,MAEO;AACLA,MAAAA,MAAM,GAAG,KAAT;AACAU,MAAAA,KAAK,CAAC,yBAAD,CAAL;AACD;;AAED,QAAIV,MAAJ,EAAY;AACVzB,MAAAA,GAAG,CAAC6B,QAAJ,CAAa;AACXK,QAAAA,IAAI,EAAEzB,UADK;AAEXP,QAAAA,KAAK,EAAEW,WAFI;AAGXuB,QAAAA,OAAO,EAAErB,UAHE;AAIXsB,QAAAA,QAAQ,EAAEpB,UAJC;AAKXE,QAAAA,IAAI,EAAEA,IALK;AAMXE,QAAAA,KAAK,EAAEA,KANI;AAOXE,QAAAA,OAAO,EAAEA,OAPE;AAQXZ,QAAAA,SAAS,EAAEA;AARA,OAAb,EAUG2B,IAVH,CAUQC,OAAO,IAAI;AACf;AACA7B,QAAAA,SAAS,CAAC,EAAD,CAAT;AACAE,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,QAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,QAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,QAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,QAAAA,UAAU,CAAC,EAAD,CAAV;AACD,OApBH,EAqBE;AArBF,OAsBGgB,KAtBH,CAsBSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAtBhB;AAuBD;AACF;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAE;AACLG,MAAAA,MAAM,EAAE,KADH;AACUC,MAAAA,KAAK,EAAE,MADjB;AACyBC,MAAAA,UAAU,EAAE,EADrC;AACyCC,MAAAA,aAAa,EAAE,EADxD;AAC4DC,MAAAA,SAAS,EAAE;AADvE,KADT;AAIE,IAAA,EAAE,EAAC,IAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,CADF,eAQE,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEvC,UADT;AAEE,IAAA,IAAI,EAAC,YAFP;AAGE,IAAA,QAAQ,EAAEqB,aAHZ;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,WAAW,EAAC,wBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATF,eAUE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,WAAW,EAAC,WAFd;AAGE,IAAA,KAAK,EAAEnB,SAHT;AAIE,IAAA,QAAQ,EAAEmB,aAJZ;AAKE,IAAA,IAAI,EAAC,MALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjBF,eAkBE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,WAAW,EAAC,mBAFd;AAGE,IAAA,KAAK,EAAEjB,WAHT;AAIE,IAAA,QAAQ,EAAEiB,aAJZ;AAKE,IAAA,IAAI,EAAC,MALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,eAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAzBF,eA0BE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,WAAW,EAAC,kBAFd;AAGE,IAAA,KAAK,EAAEf,UAHT;AAIE,IAAA,QAAQ,EAAEe,aAJZ;AAKE,IAAA,IAAI,EAAC,MALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BF,eAiCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAjCF,eAkCE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,WAAW,EAAC,kBAFd;AAGE,IAAA,KAAK,EAAEb,UAHT;AAIE,IAAA,QAAQ,EAAEa,aAJZ;AAKE,IAAA,IAAI,EAAC,MALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCF,eAyCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAzCF,eA0CE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,iBAFd;AAGE,IAAA,KAAK,EAAEX,IAHT;AAIE,IAAA,QAAQ,EAAEW,aAJZ;AAKE,IAAA,IAAI,EAAC,MALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1CF,eAiDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAjDF,eAkDE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,WAAW,EAAC,kBAFd;AAGE,IAAA,KAAK,EAAET,KAHT;AAIE,IAAA,QAAQ,EAAES,aAJZ;AAKE,IAAA,IAAI,EAAC,MALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlDF,eAyDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzDF,eA0DE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,WAAW,EAAC,qBAFd;AAGE,IAAA,KAAK,EAAEP,OAHT;AAIE,IAAA,QAAQ,EAAEO,aAJZ;AAKE,IAAA,IAAI,EAAC,MALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1DF,eAiEE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,SAAnB;AAA6B,IAAA,OAAO,EAAEJ,eAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAjEF,CADF,CADF,CADF,CARF,eAmFE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CAnFF,CADF;AA4FD;;AAED,eAAelB,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Input, FormBtn } from '../../components/Form';\nimport { Col, Row, Container } from '../../components/Grid';\nimport HomeButton from '../../components/HomeButton';\nimport RtnDocBtn from '../../components/RtnDocBtn';\nimport API from '../../utils/API';\n\nfunction validatePhoneNo(phone)  {\n  var phoneNumPattern = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n    return phoneNumPattern.test(phone);\n}\n\nfunction validateZipCode(zip) {\n  var zipCodePattern = /^\\d{5}$|^\\d{5}-\\d{4}$/;\n   return zipCodePattern.test(zip);\n}\n\nfunction AddDoc() {\n  const [doctorname, setDoctor] = useState('');\n  const [specialty, setSpecialty] = useState('');\n  const [phonenumber, setPhone] = useState('');\n  const [addressone, setAddressOne] = useState('');\n  const [addresstwo, setAddressTwo] = useState('');\n  const [city, setCity] = useState('');\n  const [state, setState] = useState('');\n  const [zipcode, setZipCode] = useState('');\n\n  let passed = true;\n\n  const onSubmitHandler = (e) => {\n    // Prevent browser refreshing after form submission\n    e.preventDefault();\n    saveDocs();\n  }\n\n  const onInputChange = (event) => {\n    const value = event.target.value;\n    const name = event.target.name;\n\n    switch (name) \n    {\n      case 'doctorname': \n      {\n        setDoctor(value);\n        break;\n      }\n\n      case 'specialty':\n        {\n          setSpecialty(value);\n          break;\n        } \n\n      case 'phonenumber':\n        {\n          setPhone(value);\n          break;\n        }  \n\n      case 'addressone':\n        {\n          setAddressOne(value);\n          break;\n        }\n\n        case 'addresstwo':\n        {\n          setAddressTwo(value);\n          break;\n        }\n\n        case 'city':\n          {\n            setCity(value);\n            break;\n          }\n\n        case 'state':\n          {\n            setState(value);\n            break;\n          }  \n\n        case 'zipcode':\n          {\n            setZipCode(value);\n            break;\n          }  \n\n        default:  \n        {\n          break;  \n        }\n    }\n  }\n\n  function saveDocs() {\n    passed = true;\n    if (!doctorname) {\n      passed = false;\n      alert(`Doctor's Name Required`);\n    } else if (!phonenumber) {\n      passed = false;\n      alert('Phone Number Required');\n    } else if (!addressone) {\n      passed = false;\n      alert('Address Line One Required');\n    } else if (!city) {\n      passed = false;\n      alert('City Required');\n    } else if (!state) {\n      passed = false;\n      alert('State Required');\n    } else if (!zipcode) {\n      passed = false;\n      alert('Zip Code Required');\n    }\n\n    if (validateZipCode(zipcode)) {\n      passed = true;\n    } else {\n      passed = false;\n      alert(\"Zip code is invalid\");\n    }\n\n    if (validatePhoneNo(phonenumber)) {\n      passed = true;\n    } else {\n      passed = false;\n      alert(\"Phone number is invalid\");\n    }\n\n    if (passed) {\n      API.saveDocs({\n        name: doctorname,\n        phone: phonenumber,\n        address: addressone,\n        address2: addresstwo,\n        city: city,\n        state: state,\n        zipcode: zipcode,\n        specialty: specialty\n      })\n        .then(results => {\n          //console.log(results);\n          setDoctor('');\n          setSpecialty('');\n          setPhone('');\n          setAddressOne('');\n          setAddressTwo('');\n          setCity('');\n          setState('');\n          setZipCode('');\n        })\n        // .then(res => loadBooks())\n        .catch(err => console.log(err));\n    }\n  }\n\n  return (\n    <div>\n      <div\n        style={{\n          height: '20%', clear: 'both', paddingTop: 20, paddingBottom: 20, textAlign: 'center',\n        }}\n        id=\"m2\" >\n        <p>DOCTORS</p>\n      </div>\n      <Container fluid>\n        <Row>\n          <Col size='md-12'>\n            <form>\n              <label>Doctor Name</label>\n              <Input\n                value={doctorname}\n                name='doctorname'\n                onChange={onInputChange}\n                type='text'\n                placeholder='Doctor Name (required)'\n              />\n              <label>Specialty</label>\n              <Input\n                name='specialty'\n                placeholder='Specialty'\n                value={specialty}\n                onChange={onInputChange}\n                type='text'\n              />\n              <label>Phone Number</label>\n              <Input\n                name='phonenumber'\n                placeholder='Phone w/Area Code'\n                value={phonenumber}\n                onChange={onInputChange}\n                type='text'\n              />\n              <label>Address Line One</label>\n              <Input\n                name='addressone'\n                placeholder='Address Line One'\n                value={addressone}\n                onChange={onInputChange}\n                type='text'\n              />\n              <label>Address Line Two</label>\n              <Input\n                name='addresstwo'\n                placeholder='Address Line Two'\n                value={addresstwo}\n                onChange={onInputChange}\n                type='text'\n              />\n              <label>City</label>\n              <Input\n                name='city'\n                placeholder='City (Required)'\n                value={city}\n                onChange={onInputChange}\n                type='text'\n              />\n              <label>State</label>\n              <Input\n                name='state'\n                placeholder='State (Required)'\n                value={state}\n                onChange={onInputChange}\n                type='text'\n              />\n              <label>Zip Code</label>\n              <Input\n                name='zipcode'\n                placeholder='Zip Code (Required)'\n                value={zipcode}\n                onChange={onInputChange}\n                type='text'\n              />\n              <FormBtn className='btn-doc' onClick={onSubmitHandler}>\n                Submit Doctor Info\n              </FormBtn>\n            </form>\n          </Col>\n        </Row>\n      </Container>\n      <Row>\n        <Col size=\"md-12\">\n          <RtnDocBtn />\n          <HomeButton />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default AddDoc;\n"]},"metadata":{},"sourceType":"module"}