{"ast":null,"code":"var _jsxFileName = \"/Users/maria/Desktop/med-check/client/src/pages/AddDoc/AddDoc.js\";\nimport React, { useState } from 'react';\nimport { Input, FormBtn } from '../../components/Form';\nimport { Col, Row, Container } from '../../components/Grid';\nimport HomeButton from '../../components/HomeButton';\nimport RtnDocBtn from '../../components/RtnDocBtn';\nimport API from '../../utils/API';\nimport { Toast } from 'react-bootstrap';\n\nfunction validatePhoneNo(phone) {\n  var phoneNumPattern = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n  return phoneNumPattern.test(phone);\n}\n\nfunction validateZipCode(zip) {\n  var zipCodePattern = /^\\d{5}$|^\\d{5}-\\d{4}$/;\n  return zipCodePattern.test(zip);\n}\n\nfunction AddDoc() {\n  const [doctorname, setDoctor] = useState('');\n  const [specialty, setSpecialty] = useState('');\n  const [phonenumber, setPhone] = useState('');\n  const [addressone, setAddressOne] = useState('');\n  const [addresstwo, setAddressTwo] = useState('');\n  const [city, setCity] = useState('');\n  const [state, setState] = useState('');\n  const [zipcode, setZipCode] = useState('');\n  const [showToast, setShowToast] = useState(false);\n  const [toastText, setToastText] = useState('');\n\n  const toggleShowToast = () => setShowToast(!showToast);\n\n  let passed = true;\n\n  const onSubmitHandler = e => {\n    // Prevent browser refreshing after form submission\n    e.preventDefault();\n    saveDocs();\n  };\n\n  const onInputChange = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n\n    switch (name) {\n      case 'doctorname':\n        {\n          setDoctor(value);\n          break;\n        }\n\n      case 'specialty':\n        {\n          setSpecialty(value);\n          break;\n        }\n\n      case 'phonenumber':\n        {\n          setPhone(value);\n          break;\n        }\n\n      case 'addressone':\n        {\n          setAddressOne(value);\n          break;\n        }\n\n      case 'addresstwo':\n        {\n          setAddressTwo(value);\n          break;\n        }\n\n      case 'city':\n        {\n          setCity(value);\n          break;\n        }\n\n      case 'state':\n        {\n          setState(value);\n          break;\n        }\n\n      case 'zipcode':\n        {\n          setZipCode(value);\n          break;\n        }\n\n      default:\n        {\n          break;\n        }\n    }\n  };\n\n  function saveDocs() {\n    passed = true;\n\n    if (!doctorname) {\n      passed = false;\n      setToastText(`Doctor's Name Required`);\n      toggleShowToast();\n    } else if (!phonenumber) {\n      passed = false;\n      setToastText(`Phone Number Required`);\n      toggleShowToast();\n    } else if (!addressone) {\n      passed = false;\n      setToastText(`Address Line One Required`);\n      toggleShowToast();\n    } else if (!city) {\n      passed = false;\n      setToastText(`City Required`);\n      toggleShowToast();\n    } else if (!state) {\n      passed = false;\n      setToastText(`State Required`);\n      toggleShowToast();\n    } else if (!zipcode) {\n      passed = false;\n      setToastText(`Zip Code Required`);\n      toggleShowToast();\n    }\n\n    if (validateZipCode(zipcode)) {\n      passed = true;\n    } else {\n      passed = false;\n      setToastText(`Zip code is invalid`);\n      toggleShowToast();\n    }\n\n    if (validatePhoneNo(phonenumber)) {\n      passed = true;\n    } else {\n      passed = false;\n      setToastText(`Phone number is invalid`);\n      toggleShowToast();\n    }\n\n    if (passed) {\n      API.saveDocs({\n        name: doctorname,\n        phone: phonenumber,\n        address: addressone,\n        address2: addresstwo,\n        city: city,\n        state: state,\n        zipcode: zipcode,\n        specialty: specialty\n      }).then(results => {\n        //console.log(results);\n        setDoctor('');\n        setSpecialty('');\n        setPhone('');\n        setAddressOne('');\n        setAddressTwo('');\n        setCity('');\n        setState('');\n        setZipCode('');\n      }) // .then(res => loadBooks())\n      .catch(err => console.log(err));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '20%',\n      clear: 'both',\n      paddingTop: 20,\n      paddingBottom: 20,\n      textAlign: 'center'\n    },\n    id: \"m2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, \"DOCTORS\")), /*#__PURE__*/React.createElement(Toast, {\n    style: {\n      backgroundColor: '#F8B71E'\n    },\n    show: showToast,\n    onClose: toggleShowToast,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Toast.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"holder.js/20x20?text=%20\",\n    className: \"rounded mr-2\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"mr-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 19\n    }\n  }, \"Error\")), /*#__PURE__*/React.createElement(Toast.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, toastText)), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }, \"Doctor Name\"), /*#__PURE__*/React.createElement(Input, {\n    value: doctorname,\n    name: \"doctorname\",\n    onChange: onInputChange,\n    type: \"text\",\n    placeholder: \"Doctor Name (required)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }, \"Specialty\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"specialty\",\n    placeholder: \"Specialty\",\n    value: specialty,\n    onChange: onInputChange,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"phonenumber\",\n    placeholder: \"Phone w/Area Code\",\n    value: phonenumber,\n    onChange: onInputChange,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 15\n    }\n  }, \"Address Line One\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"addressone\",\n    placeholder: \"Address Line One\",\n    value: addressone,\n    onChange: onInputChange,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  }, \"Address Line Two\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"addresstwo\",\n    placeholder: \"Address Line Two\",\n    value: addresstwo,\n    onChange: onInputChange,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 15\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"city\",\n    placeholder: \"City (Required)\",\n    value: city,\n    onChange: onInputChange,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 15\n    }\n  }, \"State\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"state\",\n    placeholder: \"State (Required)\",\n    value: state,\n    onChange: onInputChange,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 15\n    }\n  }, \"Zip Code\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"zipcode\",\n    placeholder: \"Zip Code (Required)\",\n    value: zipcode,\n    onChange: onInputChange,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormBtn, {\n    className: \"btn-doc\",\n    onClick: onSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 15\n    }\n  }, \"Submit Doctor Info\"))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RtnDocBtn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(HomeButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default AddDoc;","map":{"version":3,"sources":["/Users/maria/Desktop/med-check/client/src/pages/AddDoc/AddDoc.js"],"names":["React","useState","Input","FormBtn","Col","Row","Container","HomeButton","RtnDocBtn","API","Toast","validatePhoneNo","phone","phoneNumPattern","test","validateZipCode","zip","zipCodePattern","AddDoc","doctorname","setDoctor","specialty","setSpecialty","phonenumber","setPhone","addressone","setAddressOne","addresstwo","setAddressTwo","city","setCity","state","setState","zipcode","setZipCode","showToast","setShowToast","toastText","setToastText","toggleShowToast","passed","onSubmitHandler","e","preventDefault","saveDocs","onInputChange","event","value","target","name","address","address2","then","results","catch","err","console","log","height","clear","paddingTop","paddingBottom","textAlign","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Input, FormBtn } from '../../components/Form';\nimport { Col, Row, Container } from '../../components/Grid';\nimport HomeButton from '../../components/HomeButton';\nimport RtnDocBtn from '../../components/RtnDocBtn';\nimport API from '../../utils/API';\nimport { Toast } from 'react-bootstrap';\n\nfunction validatePhoneNo(phone)  {\n  var phoneNumPattern = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n    return phoneNumPattern.test(phone);\n}\n\nfunction validateZipCode(zip) {\n  var zipCodePattern = /^\\d{5}$|^\\d{5}-\\d{4}$/;\n   return zipCodePattern.test(zip);\n}\n\nfunction AddDoc() {\n  const [doctorname, setDoctor] = useState('');\n  const [specialty, setSpecialty] = useState('');\n  const [phonenumber, setPhone] = useState('');\n  const [addressone, setAddressOne] = useState('');\n  const [addresstwo, setAddressTwo] = useState('');\n  const [city, setCity] = useState('');\n  const [state, setState] = useState('');\n\tconst [zipcode, setZipCode] = useState('');\n\tconst [showToast, setShowToast] = useState(false);\n  const [toastText, setToastText] = useState('');\n  const toggleShowToast = () => setShowToast(!showToast);\n\n  let passed = true;\n\n  const onSubmitHandler = (e) => {\n    // Prevent browser refreshing after form submission\n    e.preventDefault();\n    saveDocs();\n  }\n\n  const onInputChange = (event) => {\n    const value = event.target.value;\n    const name = event.target.name;\n\n    switch (name) \n    {\n      case 'doctorname': \n      {\n        setDoctor(value);\n        break;\n      }\n\n      case 'specialty':\n        {\n          setSpecialty(value);\n          break;\n        } \n\n      case 'phonenumber':\n        {\n          setPhone(value);\n          break;\n        }  \n\n      case 'addressone':\n        {\n          setAddressOne(value);\n          break;\n        }\n\n        case 'addresstwo':\n        {\n          setAddressTwo(value);\n          break;\n        }\n\n        case 'city':\n          {\n            setCity(value);\n            break;\n          }\n\n        case 'state':\n          {\n            setState(value);\n            break;\n          }  \n\n        case 'zipcode':\n          {\n            setZipCode(value);\n            break;\n          }  \n\n        default:  \n        {\n          break;  \n        }\n    }\n  }\n\n  function saveDocs() {\n    passed = true;\n    if (!doctorname) {\n\t\t\tpassed = false;\n\t\t\tsetToastText(`Doctor's Name Required`);\n      toggleShowToast();\n    } else if (!phonenumber) {\n\t\t\tpassed = false;\n\t\t\tsetToastText(`Phone Number Required`);\n      toggleShowToast();\n    } else if (!addressone) {\n\t\t\tpassed = false;\n\t\t\tsetToastText(`Address Line One Required`);\n      toggleShowToast();\n    } else if (!city) {\n\t\t\tpassed = false;\n\t\t\tsetToastText(`City Required`);\n      toggleShowToast();\n    } else if (!state) {\n\t\t\tpassed = false;\n\t\t\tsetToastText(`State Required`);\n      toggleShowToast();\n    } else if (!zipcode) {\n\t\t\tpassed = false;\n\t\t\tsetToastText(`Zip Code Required`);\n      toggleShowToast();\n    }\n\n    if (validateZipCode(zipcode)) {\n      passed = true;\n    } else {\n\t\t\tpassed = false;\n\t\t\tsetToastText(`Zip code is invalid`);\n      toggleShowToast();\n    }\n\n    if (validatePhoneNo(phonenumber)) {\n      passed = true;\n    } else {\n\t\t\tpassed = false;\n\t\t\tsetToastText(`Phone number is invalid`);\n      toggleShowToast();\n    }\n\n    if (passed) {\n      API.saveDocs({\n        name: doctorname,\n        phone: phonenumber,\n        address: addressone,\n        address2: addresstwo,\n        city: city,\n        state: state,\n        zipcode: zipcode,\n        specialty: specialty\n      })\n        .then(results => {\n          //console.log(results);\n          setDoctor('');\n          setSpecialty('');\n          setPhone('');\n          setAddressOne('');\n          setAddressTwo('');\n          setCity('');\n          setState('');\n          setZipCode('');\n        })\n        // .then(res => loadBooks())\n        .catch(err => console.log(err));\n    }\n  }\n\n  return (\n    <div>\n      <div\n        style={{\n          height: '20%', clear: 'both', paddingTop: 20, paddingBottom: 20, textAlign: 'center',\n        }}\n        id=\"m2\" >\n        <p>DOCTORS</p>\n      </div>\n\t\t\t<Toast style={{ backgroundColor: '#F8B71E' }} show={showToast} onClose={toggleShowToast}>\n                <Toast.Header>\n                  <img\n                    src=\"holder.js/20x20?text=%20\"\n                    className=\"rounded mr-2\"\n                    alt=\"\"\n                  />\n                  <strong className=\"mr-auto\">Error</strong>\n                </Toast.Header>\n                <Toast.Body>{toastText}</Toast.Body>\n              </Toast>\n      <Container fluid>\n        <Row>\n          <Col size='md-12'>\n            <form>\n              <label>Doctor Name</label>\n              <Input\n                value={doctorname}\n                name='doctorname'\n                onChange={onInputChange}\n                type='text'\n                placeholder='Doctor Name (required)'\n              />\n              <label>Specialty</label>\n              <Input\n                name='specialty'\n                placeholder='Specialty'\n                value={specialty}\n                onChange={onInputChange}\n                type='text'\n              />\n              <label>Phone Number</label>\n              <Input\n                name='phonenumber'\n                placeholder='Phone w/Area Code'\n                value={phonenumber}\n                onChange={onInputChange}\n                type='text'\n              />\n              <label>Address Line One</label>\n              <Input\n                name='addressone'\n                placeholder='Address Line One'\n                value={addressone}\n                onChange={onInputChange}\n                type='text'\n              />\n              <label>Address Line Two</label>\n              <Input\n                name='addresstwo'\n                placeholder='Address Line Two'\n                value={addresstwo}\n                onChange={onInputChange}\n                type='text'\n              />\n              <label>City</label>\n              <Input\n                name='city'\n                placeholder='City (Required)'\n                value={city}\n                onChange={onInputChange}\n                type='text'\n              />\n              <label>State</label>\n              <Input\n                name='state'\n                placeholder='State (Required)'\n                value={state}\n                onChange={onInputChange}\n                type='text'\n              />\n              <label>Zip Code</label>\n              <Input\n                name='zipcode'\n                placeholder='Zip Code (Required)'\n                value={zipcode}\n                onChange={onInputChange}\n                type='text'\n              />\n              <FormBtn className='btn-doc' onClick={onSubmitHandler}>\n                Submit Doctor Info\n              </FormBtn>\n            </form>\n          </Col>\n        </Row>\n      </Container>\n      <Row>\n        <Col size=\"md-12\">\n          <RtnDocBtn />\n          <HomeButton />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default AddDoc;\n"]},"metadata":{},"sourceType":"module"}